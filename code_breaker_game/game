#include <Arduino_GFX_Library.h>
#include <Keypad.h>

// TFT Display pin definitions
#define TFT_SCLK  18
#define TFT_MOSI  23
#define TFT_MISO  19
#define TFT_CS    15
#define TFT_DC    21
#define TFT_RST   2

#define SCREEN_WIDTH  240
#define SCREEN_HEIGHT 320

// Keypad definitions
const byte ROWS = 4;
const byte COLS = 3;

char keys[ROWS][COLS] = {
  {'1','2','3'},
  {'4','5','6'},
  {'7','8','9'},
  {'*','0','#'}
};

byte rowPins[ROWS] = {13, 12, 27, 26};
byte colPins[COLS] = {25, 33, 32};

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

// Set up the SPI bus and display
Arduino_ESP32SPI bus(TFT_DC, TFT_CS, TFT_SCLK, TFT_MOSI, TFT_MISO);
Arduino_ILI9341 display(&bus, TFT_RST);

// Buffer for storing 3 keys
char inputBuffer[4]; // 3 chars + null terminator
byte inputIndex = 0;

// Store the random number as a string for comparison
char randomNumberStr[4];

// Function to generate and display a new random number
void generateNewRandomNumber() {
  int randomNumber = random(0, 1000);
  snprintf(randomNumberStr, sizeof(randomNumberStr), "%03d", randomNumber);

  // Clear just the area where the number is displayed
  int charWidth = 6 * 2;
  int charHeight = 8 * 2;
  int numChars = 3;
  int textWidth = charWidth * numChars;
  int textHeight = charHeight;
  int x = (SCREEN_WIDTH - textWidth) / 2;
  int y = (SCREEN_HEIGHT - textHeight) / 2;

  display.fillRect(x, y, textWidth, textHeight, WHITE); // Clear previous number
  display.setCursor(x, y);
  display.setTextColor(BLACK);
  display.setTextSize(2);
  display.print(randomNumberStr);
}

void setup() {
  Serial.begin(9600);

  // Initialize display
  display.begin();
  display.fillScreen(WHITE);
  display.setTextColor(BLACK);
  display.setTextSize(2);

  // Show "Code breaker game"
  display.setCursor(30, 100);
  display.print("Code breaker game");

  delay(5000); // Show for 5 seconds

  // Clear the screen
  display.fillScreen(WHITE);

  // Generate and display the initial random number
  generateNewRandomNumber();
}

void loop() {
  char key = keypad.getKey();
  if (key) {
    if (inputIndex < 3) {
      inputBuffer[inputIndex++] = key;
    }
    if (inputIndex == 3) {
      inputBuffer[3] = '\0'; // Null-terminate

      // Check if input matches the random number
      if (strcmp(inputBuffer, randomNumberStr) == 0) {
        Serial.println("You won!");
        Serial.println("Creating a new challenge.");
        generateNewRandomNumber(); // Generate and display a new number
      } else {
        // Compare inputBuffer to randomNumberStr for matches
        int matchCount = 0;
        for (int i = 0; i < 3; i++) {
          if (inputBuffer[i] == randomNumberStr[i]) {
            matchCount++;
          }
        }
        Serial.print("Input: ");
        Serial.print(inputBuffer);
        Serial.print(" | Random: ");
        Serial.print(randomNumberStr);
        Serial.print(" | Matches: ");
        Serial.println(matchCount);
      }

      inputIndex = 0; // Reset for next 3 keys
    }
  }
}
